# ============================================
# Trump Trading Bot - Environment Variables
# ============================================
#
# STANDARD ENVIRONMENT-SPECIFIC CONFIGURATION:
# 
# This application follows the standard .env.<environment> naming convention:
# 
# 1. .env.local (LOCAL DEVELOPMENT):
#    - Used for local development on your machine
#    - Set: export APP_ENV=local
#    - Database: localhost PostgreSQL
#    - To use: cp example.env .env.local (then edit with your keys)
# 
# 2. .env.production (PRODUCTION/AWS):
#    - Used for production deployment on AWS EC2
#    - Set: export APP_ENV=production (automatically set in systemd services)
#    - Database: AWS RDS PostgreSQL
#    - To use: cp example.env .env.production (then edit with your keys)
# 
# 3. .env (BACKWARD COMPATIBILITY - OPTIONAL):
#    - Falls back to .env if APP_ENV is not set
#    - Not required if you use .env.local or .env.production
# 
# QUICK START:
# 1. Copy this file: cp example.env .env.local
# 2. Edit .env.local with your actual API keys
# 3. Set environment: export APP_ENV=local
# 4. Run the application
#
# ============================================

# ===== RapidAPI (Social Media Monitoring) =====
# Get your API key from: https://rapidapi.com/hub

# Twitter Monitoring (https://rapidapi.com/davethebeast/api/twitter241)
RAPIDAPI_KEY=your_rapidapi_key_here
RAPIDAPI_HOST=twitter241.p.rapidapi.com
TRUMP_TWITTER_USER_ID=25073877

# Truth Social Monitoring (https://rapidapi.com/belchiorarkad-FqvHs2EDOtP/api/truth-social-api)
TRUTH_SOCIAL_RAPIDAPI_HOST=truth-social-api.p.rapidapi.com
TRUMP_TRUTH_SOCIAL_USERNAME=realDonaldTrump

# ===== Anthropic Claude (AI Sentiment Analysis) =====
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ===== Binance (Futures Trading) =====
# Get your API keys from: https://www.binance.com/ (live) or https://testnet.binancefuture.com/ (testnet)
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_api_secret_here
# Set to 'False' for live trading, 'True' for testnet
BINANCE_TESTNET=False

# ===== Telegram (Notifications) =====
# Create bot via @BotFather on Telegram
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
# Get channel ID after creating a channel and adding your bot as admin
TELEGRAM_CHANNEL_ID=your_telegram_channel_id_here

# ===== Database =====
# LOCAL (.env.local): Use localhost PostgreSQL
DATABASE_URL=postgresql://trump_trader:trump_trader_password@localhost:5432/trump_trader

# PRODUCTION (.env.production): Use AWS RDS endpoint (replace with your RDS endpoint)
# DATABASE_URL=postgresql://trump_trader:your_password@your-rds-endpoint.rds.amazonaws.com:5432/trump_trader

# ===== Application Settings =====
# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
